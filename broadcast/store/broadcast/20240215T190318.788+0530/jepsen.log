2024-02-15 19:03:18,815{GMT}	INFO	[jepsen test runner] jepsen.core: Command line:
lein run test -w broadcast --bin /Users/manthangupta/go/bin/broadcast --node-count 5 --time-limit 20 --rate 10
2024-02-15 19:03:18,879{GMT}	INFO	[jepsen test runner] jepsen.core: Running test:
{:args []
 :remote
 #jepsen.control.retry.Remote{:remote #jepsen.control.scp.Remote{:cmd-remote #jepsen.control.sshj.SSHJRemote{:concurrency-limit 6,
                                                                                                             :conn-spec nil,
                                                                                                             :client nil,
                                                                                                             :semaphore nil},
                                                                 :conn-spec nil},
                              :conn nil}
 :log-net-send false
 :node-count 5
 :availability nil
 :max-txn-length 4
 :concurrency 5
 :db
 #object[maelstrom.db$db$reify__16142
         "0x36573ec5"
         "maelstrom.db$db$reify__16142@36573ec5"]
 :max-writes-per-key 16
 :leave-db-running? false
 :name "broadcast"
 :logging-json? false
 :start-time
 #object[org.joda.time.DateTime "0x686279e0" "2024-02-15T19:03:18.788+05:30"]
 :nemesis-interval 10
 :net
 #object[maelstrom.net$jepsen_net$reify__15251
         "0x6b28d4e4"
         "maelstrom.net$jepsen_net$reify__15251@6b28d4e4"]
 :client
 #object[maelstrom.workload.broadcast$client$reify__16644
         "0x41cfcbb5"
         "maelstrom.workload.broadcast$client$reify__16644@41cfcbb5"]
 :barrier
 #object[java.util.concurrent.CyclicBarrier
         "0x40941b54"
         "java.util.concurrent.CyclicBarrier@40941b54"]
 :log-stderr false
 :pure-generators true
 :ssh {:dummy? true}
 :rate 10.0
 :checker
 #object[jepsen.checker$compose$reify__11881
         "0x3b42d7df"
         "jepsen.checker$compose$reify__11881@3b42d7df"]
 :argv
 ("test"
  "-w"
  "broadcast"
  "--bin"
  "/Users/manthangupta/go/bin/broadcast"
  "--node-count"
  "5"
  "--time-limit"
  "20"
  "--rate"
  "10")
 :nemesis
 (jepsen.nemesis.ReflCompose
  {:fm {:start-partition 0,
        :stop-partition 0,
        :kill 1,
        :start 1,
        :pause 1,
        :resume 1},
   :nemeses [#unprintable "jepsen.nemesis.combined$partition_nemesis$reify__16416@1660bba7"
             #unprintable "jepsen.nemesis.combined$db_nemesis$reify__16397@29cd48bd"]})
 :nodes ["n0" "n1" "n2" "n3" "n4"]
 :test-count 1
 :latency {:mean 0, :dist :constant}
 :bin "/Users/manthangupta/go/bin/broadcast"
 :generator
 ((jepsen.generator.Synchronize
   {:gen (jepsen.generator.TimeLimit
          {:limit 20000000000,
           :cutoff nil,
           :gen (jepsen.generator.Any
                 {:gens [(jepsen.generator.OnThreads
                          {:f #{:nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x2a2f7a61"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@2a2f7a61"],
                           :gen nil})
                         (jepsen.generator.OnThreads
                          {:f #jepsen.generator.context.AllBut{:element :nemesis},
                           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                                   "0x8d40f07"
                                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@8d40f07"],
                           :gen (jepsen.generator.Stagger
                                 {:dt 200000000,
                                  :next-time nil,
                                  :gen (jepsen.generator.Mix
                                        {:i 1,
                                         :gens [({:f :broadcast, :value 0}
                                                 {:f :broadcast, :value 1}
                                                 {:f :broadcast, :value 2}
                                                 {:f :broadcast, :value 3}
                                                 {:f :broadcast, :value 4}
                                                 {:f :broadcast, :value 5}
                                                 {:f :broadcast, :value 6}
                                                 {:f :broadcast, :value 7}
                                                 ...)
                                                ({:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 {:f :read}
                                                 ...)]})})})]})})})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #{:nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x307ca947"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@307ca947"],
           :gen ()})})
  (jepsen.generator.Synchronize
   {:gen {:type :log, :value "Waiting for recovery..."}})
  (jepsen.generator.Synchronize {:gen {:type :sleep, :value 10}})
  (jepsen.generator.Synchronize
   {:gen (jepsen.generator.OnThreads
          {:f #jepsen.generator.context.AllBut{:element :nemesis},
           :context-filter #object[jepsen.generator.context$make_thread_filter$lazy_filter__9167
                                   "0x61d1315b"
                                   "jepsen.generator.context$make_thread_filter$lazy_filter__9167@61d1315b"],
           :gen (jepsen.generator.EachThread
                 {:fresh-gen {:f :read, :final? true},
                  :context-filters #object[clojure.core$promise$reify__8591
                                           "0x49d5b651"
                                           {:status :pending, :val nil}],
                  :gens {}})})}))
 :log-net-recv false
 :os
 #object[maelstrom.net$jepsen_os$reify__15254
         "0x34989ceb"
         "maelstrom.net$jepsen_os$reify__15254@34989ceb"]
 :time-limit 20
 :workload :broadcast
 :consistency-models [:strict-serializable]
 :topology :grid}

2024-02-15 19:03:19,818{GMT}	INFO	[jepsen node n0] maelstrom.net: Starting Maelstrom network
2024-02-15 19:03:19,819{GMT}	INFO	[jepsen test runner] jepsen.db: Tearing down DB
2024-02-15 19:03:19,820{GMT}	INFO	[jepsen test runner] jepsen.db: Setting up DB
2024-02-15 19:03:19,820{GMT}	INFO	[jepsen node n1] maelstrom.db: Setting up n1
2024-02-15 19:03:19,820{GMT}	INFO	[jepsen node n4] maelstrom.db: Setting up n4
2024-02-15 19:03:19,820{GMT}	INFO	[jepsen node n3] maelstrom.db: Setting up n3
2024-02-15 19:03:19,820{GMT}	INFO	[jepsen node n2] maelstrom.db: Setting up n2
2024-02-15 19:03:19,821{GMT}	INFO	[jepsen node n1] maelstrom.process: launching /Users/manthangupta/go/bin/broadcast []
2024-02-15 19:03:19,821{GMT}	INFO	[jepsen node n4] maelstrom.process: launching /Users/manthangupta/go/bin/broadcast []
2024-02-15 19:03:19,821{GMT}	INFO	[jepsen node n3] maelstrom.process: launching /Users/manthangupta/go/bin/broadcast []
2024-02-15 19:03:19,821{GMT}	INFO	[jepsen node n2] maelstrom.process: launching /Users/manthangupta/go/bin/broadcast []
2024-02-15 19:03:19,822{GMT}	INFO	[jepsen node n0] maelstrom.service: Starting services: (lin-kv lin-tso lww-kv seq-kv)
2024-02-15 19:03:19,825{GMT}	INFO	[jepsen node n0] maelstrom.db: Setting up n0
2024-02-15 19:03:19,825{GMT}	INFO	[jepsen node n0] maelstrom.process: launching /Users/manthangupta/go/bin/broadcast []
2024-02-15 19:03:20,273{GMT}	INFO	[jepsen test runner] jepsen.core: Relative time begins now
2024-02-15 19:03:20,308{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-02-15 19:03:20,338{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:ok	:read	[]
2024-02-15 19:03:20,482{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:read	nil
2024-02-15 19:03:20,497{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:ok	:read	[]
2024-02-15 19:03:20,607{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	0
2024-02-15 19:03:20,609{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:ok	:broadcast	0
2024-02-15 19:03:20,665{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:read	nil
2024-02-15 19:03:20,820{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:invoke	:broadcast	1
2024-02-15 19:03:20,839{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:read	nil
2024-02-15 19:03:20,968{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:invoke	:broadcast	2
2024-02-15 19:03:21,061{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:invoke	:broadcast	3
2024-02-15 19:03:25,684{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:fail	:read	nil	:net-timeout
2024-02-15 19:03:25,692{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:invoke	:broadcast	4
2024-02-15 19:03:25,846{GMT}	INFO	[jepsen worker 4] jepsen.util: 4	:info	:broadcast	1	:net-timeout
2024-02-15 19:03:25,847{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:fail	:read	nil	:net-timeout
2024-02-15 19:03:25,851{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-02-15 19:03:25,883{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:invoke	:broadcast	5
2024-02-15 19:03:25,970{GMT}	INFO	[jepsen worker 1] jepsen.util: 1	:info	:broadcast	2	:net-timeout
2024-02-15 19:03:25,970{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:invoke	:broadcast	6
2024-02-15 19:03:26,125{GMT}	INFO	[jepsen worker 2] jepsen.util: 2	:info	:broadcast	3	:net-timeout
2024-02-15 19:03:26,126{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:invoke	:broadcast	7
2024-02-15 19:03:30,715{GMT}	INFO	[jepsen worker 3] jepsen.util: 3	:info	:broadcast	4	:net-timeout
2024-02-15 19:03:30,717{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:invoke	:broadcast	8
2024-02-15 19:03:30,855{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-02-15 19:03:30,888{GMT}	INFO	[jepsen worker 0] jepsen.util: 0	:info	:broadcast	5	:net-timeout
2024-02-15 19:03:30,895{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-02-15 19:03:30,938{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:invoke	:broadcast	9
2024-02-15 19:03:30,975{GMT}	INFO	[jepsen worker 1] jepsen.util: 6	:info	:broadcast	6	:net-timeout
2024-02-15 19:03:30,996{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:invoke	:broadcast	10
2024-02-15 19:03:31,131{GMT}	INFO	[jepsen worker 2] jepsen.util: 7	:info	:broadcast	7	:net-timeout
2024-02-15 19:03:31,176{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:read	nil
2024-02-15 19:03:35,722{GMT}	INFO	[jepsen worker 3] jepsen.util: 8	:info	:broadcast	8	:net-timeout
2024-02-15 19:03:35,723{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:read	nil
2024-02-15 19:03:35,900{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-02-15 19:03:35,901{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-02-15 19:03:35,942{GMT}	INFO	[jepsen worker 0] jepsen.util: 5	:info	:broadcast	9	:net-timeout
2024-02-15 19:03:35,998{GMT}	INFO	[jepsen worker 1] jepsen.util: 11	:info	:broadcast	10	:net-timeout
2024-02-15 19:03:36,049{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-02-15 19:03:36,180{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:fail	:read	nil	:net-timeout
2024-02-15 19:03:36,212{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:invoke	:broadcast	11
2024-02-15 19:03:36,407{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:invoke	:broadcast	12
2024-02-15 19:03:40,725{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:fail	:read	nil	:net-timeout
2024-02-15 19:03:40,906{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-02-15 19:03:41,054{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2024-02-15 19:03:41,213{GMT}	INFO	[jepsen worker 1] jepsen.util: 16	:info	:broadcast	11	:net-timeout
2024-02-15 19:03:41,412{GMT}	INFO	[jepsen worker 2] jepsen.util: 12	:info	:broadcast	12	:net-timeout
2024-02-15 19:03:41,414{GMT}	INFO	[jepsen worker nemesis] jepsen.generator.interpreter: Waiting for recovery...
2024-02-15 19:03:51,426{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:invoke	:read	nil
2024-02-15 19:03:51,426{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:invoke	:read	nil
2024-02-15 19:03:51,426{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:invoke	:read	nil
2024-02-15 19:03:51,427{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:invoke	:read	nil
2024-02-15 19:03:51,427{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:invoke	:read	nil
2024-02-15 19:03:56,428{GMT}	INFO	[jepsen worker 1] jepsen.util: 21	:fail	:read	nil	:net-timeout
2024-02-15 19:03:56,431{GMT}	INFO	[jepsen worker 3] jepsen.util: 13	:fail	:read	nil	:net-timeout
2024-02-15 19:03:56,431{GMT}	INFO	[jepsen worker 2] jepsen.util: 17	:fail	:read	nil	:net-timeout
2024-02-15 19:03:56,431{GMT}	INFO	[jepsen worker 0] jepsen.util: 10	:fail	:read	nil	:net-timeout
2024-02-15 19:03:56,431{GMT}	INFO	[jepsen worker 4] jepsen.util: 9	:fail	:read	nil	:net-timeout
2024-02-15 19:03:56,453{GMT}	INFO	[jepsen test runner] jepsen.core: Run complete, writing
2024-02-15 19:03:56,515{GMT}	INFO	[jepsen node n0] maelstrom.db: Tearing down n0
2024-02-15 19:03:56,515{GMT}	INFO	[jepsen node n1] maelstrom.db: Tearing down n1
2024-02-15 19:03:56,515{GMT}	INFO	[jepsen node n2] maelstrom.db: Tearing down n2
2024-02-15 19:03:56,515{GMT}	INFO	[jepsen node n3] maelstrom.db: Tearing down n3
2024-02-15 19:03:56,515{GMT}	INFO	[jepsen node n4] maelstrom.db: Tearing down n4
2024-02-15 19:03:57,448{GMT}	INFO	[jepsen node n0] maelstrom.net: Shutting down Maelstrom network
2024-02-15 19:03:57,452{GMT}	WARN	[jepsen test runner] jepsen.core: Test crashed!
clojure.lang.ExceptionInfo: Node n1 crashed with exit status 1. Before crashing, it wrote to STDOUT:

{"src":"n1","dest":"c1","body":{"in_reply_to":1,"type":"init_ok"}}
{"src":"n1","dest":"c6","body":{"in_reply_to":1,"type":"topology_ok"}}
{"src":"n1","dest":"c11","body":{"in_reply_to":1,"messages":[],"type":"read_ok"}}
{"src":"n1","dest":"n0","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n2","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n3","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n4","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n2","body":{"in_reply_to":0,"type":"broadcast_ok"}}
{"src":"n1","dest":"n0","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n2","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n3","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n4","body":{"type":"broadcast","message":0}}
{"src":"n1","dest":"n0","body":{"in_reply_to":0,"type":"broadcast_ok"}}

And to STDERR:

2024/02/15 19:03:20 Received {c1 n1 {"type":"init","node_id":"n1","node_ids":["n0","n1","n2","n3","n4"],"msg_id":1}}
2024/02/15 19:03:20 Node n1 initialized
2024/02/15 19:03:20 Sent {"src":"n1","dest":"c1","body":{"in_reply_to":1,"type":"init_ok"}}
2024/02/15 19:03:20 Received {c6 n1 {"type":"topology","topology":{"n0":["n3","n1"],"n1":["n4","n2","n0"],"n2":["n1"],"n3":["n0","n4"],"n4":["n1","n3"]},"msg_id":1}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"c6","body":{"in_reply_to":1,"type":"topology_ok"}}
2024/02/15 19:03:20 Received {c11 n1 {"type":"read","msg_id":1}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"c11","body":{"in_reply_to":1,"messages":[],"type":"read_ok"}}
2024/02/15 19:03:20 Received {n2 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n0","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n2","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n3","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n4","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n2","body":{"in_reply_to":0,"type":"broadcast_ok"}}
2024/02/15 19:03:20 Received {n0 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n0","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n2","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n3","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n4","body":{"type":"broadcast","message":0}}
2024/02/15 19:03:20 Sent {"src":"n1","dest":"n0","body":{"in_reply_to":0,"type":"broadcast_ok"}}
2024/02/15 19:03:20 Received {n4 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n3 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n4 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n3 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n2 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n3 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n0 n1 {"type":"broadcast","message":0}}
2024/02/15 19:03:20 Received {n3 n1 {"in_reply_to":0,"type":"broadcast_ok"}}
2024/02/15 19:03:20 No handler for {"id":78,"src":"n3","dest":"n1","body":{"in_reply_to":0,"type":"broadcast_ok"}}

Full STDERR logs are available in /Users/manthangupta/Desktop/Fly.io Challenges/broadcast/store/broadcast/20240215T190318.788+0530/node-logs/n1.log
	at slingshot.support$stack_trace.invoke(support.clj:201)
	at maelstrom.process$stop_node_BANG_.invokeStatic(process.clj:239)
	at maelstrom.process$stop_node_BANG_.invoke(process.clj:217)
	at maelstrom.db$db$reify__16142.teardown_BANG_(db.clj:75)
	at jepsen.db$fn__8744$G__8725__8748.invoke(db.clj:12)
	at jepsen.db$fn__8744$G__8724__8753.invoke(db.clj:12)
	at clojure.core$partial$fn__5908.invoke(core.clj:2642)
	at jepsen.control$on_nodes$fn__8599.invoke(control.clj:314)
	at clojure.lang.AFn.applyToHelper(AFn.java:154)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.applyTo(RestFn.java:142)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:408)
	at dom_top.core$real_pmap_helper$build_thread__211$fn__212.invoke(core.clj:163)
	at clojure.lang.AFn.applyToHelper(AFn.java:152)
	at clojure.lang.AFn.applyTo(AFn.java:144)
	at clojure.core$apply.invokeStatic(core.clj:667)
	at clojure.core$with_bindings_STAR_.invokeStatic(core.clj:1990)
	at clojure.core$with_bindings_STAR_.doInvoke(core.clj:1990)
	at clojure.lang.RestFn.invoke(RestFn.java:425)
	at clojure.lang.AFn.applyToHelper(AFn.java:156)
	at clojure.lang.RestFn.applyTo(RestFn.java:132)
	at clojure.core$apply.invokeStatic(core.clj:671)
	at clojure.core$bound_fn_STAR_$fn__5818.doInvoke(core.clj:2020)
	at clojure.lang.RestFn.invoke(RestFn.java:397)
	at clojure.lang.AFn.run(AFn.java:22)
	at java.base/java.lang.Thread.run(Thread.java:1583)
